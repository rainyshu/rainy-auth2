package com.example.demo.entity;

import lombok.*;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

@Entity
@Table(name = "role")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Role {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(unique = true, length = 50, nullable = false)
    private String code;

    @Column(unique = true, length = 50, nullable = false)
    private String name;

    @Column(columnDefinition = "tinyint(1) default 1")
    private Boolean enable = true;

    /* 多对多：角色 ↔ 用户（由 User 端维护中间表，这里 mappedBy） */
    @ManyToMany(mappedBy = "roles", fetch = FetchType.LAZY)
    @Builder.Default
    private Set<User> users = new HashSet<>();

    /* 多对多：角色 ↔ 权限（由 Role 端维护中间表） */
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(
        name = "role_permission",
        joinColumns = @JoinColumn(
                name = "role_id",
                foreignKey = @ForeignKey(value = ConstraintMode.NO_CONSTRAINT)
        ),
        inverseJoinColumns = @JoinColumn(
                name = "permission_id",
                foreignKey = @ForeignKey(value = ConstraintMode.NO_CONSTRAINT)
        )
    )
    @Builder.Default
    private Set<Permission> permissions = new HashSet<>();
}

CREATE TABLE role (
  id     BIGINT AUTO_INCREMENT PRIMARY KEY,
  code   VARCHAR(50) NOT NULL UNIQUE,
  name   VARCHAR(50) NOT NULL UNIQUE,
  enable TINYINT(1) DEFAULT 1
) ENGINE = InnoDB;

-- 中间表：user_role（由 User 实体维护）
CREATE TABLE user_role (
  user_id BIGINT,
  role_id BIGINT,
  PRIMARY KEY (user_id, role_id)
) ENGINE = InnoDB;

-- 中间表：role_permission（由 Role 实体维护）
CREATE TABLE role_permission (
  role_id       BIGINT,
  permission_id BIGINT,
  PRIMARY KEY (role_id, permission_id)
) ENGINE = InnoDB;